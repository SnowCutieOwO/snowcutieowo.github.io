import{_ as s,C as e,c as r,o as c,an as t,G as i}from"./chunks/framework.CUFjuIqA.js";const b=JSON.parse('{"title":"迁移","description":"","frontmatter":{"breadcrumbs":[{"title":"Continue Project","link":"/AuraSkills"},{"title":"迁移","link":"/AuraSkills/migration"}]},"headers":[],"relativePath":"AuraSkills/migration.md","filePath":"AuraSkills/migration.md"}'),d={name:"AuraSkills/migration.md"};function u(n,l,m,k,h,p){const a=e("NolebaseGitContributors"),o=e("NolebaseGitChangelog");return c(),r("div",null,[l[0]||(l[0]=t('<h1 id="迁移" tabindex="-1">迁移 <a class="header-anchor" href="#迁移" aria-label="Permalink to &quot;迁移&quot;">​</a></h1><p>如何从 AureliumSkills Beta 1.3.0 迁移至 AuraSkills 2.0</p><p>2.0 更新之后，插件从 AureliumSkills 更名为 AuraSkills。这表示插件配置文件夹从 <code>/AureliumSkills</code> 变为了 <code>/AuraSkills</code>。</p><div class="info custom-block"><p class="custom-block-title">信息</p><p>还不清楚 2.0 版本更新了什么？快去读读<a href="./release-notes.2-0">更新记录</a>吧。</p></div><p>虽然推荐直接使用改进后的新默认配置，你仍然可以将旧配置迁移至新文件夹。但是，有些东西不可以直接迁移，因此你仍然需要基于对配置的修改程度手动操作。</p><p>若你需要迁移，在使用新版本 AuraSkills 时保留旧的 <code>/AureliumSkills</code> 文件夹，在 <code>/AuraSkills</code> 文件内容生成后，就可以将旧设置迁移。</p><div class="warning custom-block"><p class="custom-block-title">警告</p><p>请在迁移前备份 <code>/AureliumSkills</code> 以及数据库（若使用 MySQL 存储数据的话）。</p></div><h2 id="是否迁移" tabindex="-1">是否迁移？ <a class="header-anchor" href="#是否迁移" aria-label="Permalink to &quot;是否迁移？&quot;">​</a></h2><p>如果你的服务器打算开新周目，则无需迁移。新默认配置更加平衡，推荐使用。仅在你需要保留能力/属性/经验来源值时建议迁移。消息与菜单不会迁移（见下），所以如果你只修改了这些内容，你需要在新配置再次手动修改。</p><h2 id="失去的内容" tabindex="-1">失去的内容 <a class="header-anchor" href="#失去的内容" aria-label="Permalink to &quot;失去的内容&quot;">​</a></h2><ul><li>与旧 AureliumSkills 的兼容性会因插件改名而不再生效。另外 API 中也有许多改动，因此对应插件也需重构代码。请检查与 AureliumSkills 插件联动的插件是否在新版本兼容了 AuraSkills。</li><li>因插件改名，先前的设置的权限将不会生效。</li></ul><h2 id="不会迁移的内容" tabindex="-1">不会迁移的内容 <a class="header-anchor" href="#不会迁移的内容" aria-label="Permalink to &quot;不会迁移的内容&quot;">​</a></h2><ul><li>消息文件（大幅度格式改动）</li><li>菜单文件（大幅度格式改动）</li><li>诸如 <code>%aureliumskills_...%</code> 等的 PlaceholderAPI 变量仍然会生效，但建议将其改为新格式 <code>%auraskills_...%</code>。</li><li>在旧的 <code>source_config.yml</code> 下添加的自定义经验来源设置。</li><li>通过 <code>/sk item register</code> 注册的物品条目会被重置。鉴于修饰符的 NBT 格式发生了改动，你需要手动重新注册你的物品才可以让其在奖励/战利品中生效。</li></ul><h2 id="自动迁移的内容" tabindex="-1">自动迁移的内容 <a class="header-anchor" href="#自动迁移的内容" aria-label="Permalink to &quot;自动迁移的内容&quot;">​</a></h2><ul><li><code>config.yml</code> 的大部分选项（技能相关的会移动至 <code>skills.yml</code>，属性相关的会移动至 <code>stats.yml</code>）</li><li>奖励与战利品表（格式大部分不变）</li><li>玩家数据（现在以 YAML 格式存储在 <code>userdata</code> 中，若使用 MySQL 则会创建新表）</li><li><code>sources_config.yml</code> 下的经验值（移动至 <code>sources</code> 文件夹下）</li><li><code>xp_requirements.yml</code>（格式不变）</li><li><code>abilities_config.yml</code>（分别移动至 <code>abilities.yml</code> 与 <code>mana_abilities.yml</code> 中）</li><li>手持的物品/装备修饰符</li></ul><h2 id="技能合并" tabindex="-1">技能合并 <a class="header-anchor" href="#技能合并" aria-label="Permalink to &quot;技能合并&quot;">​</a></h2><p>在默认配置中，技能的数量从 15 调整为 11.但是，如果你是从 Beta 版本迁移配置而来，你仍然会拥有 15 个技能及对应能力。若你想要迁移玩家数据并像新默认配置那样合并技能，你需要手动完成如下操作：</p><ul><li>删除 <code>skills.yml</code>、<code>abilities.yml</code>、menus 文件夹、rewards 文件夹及 sources 文件夹，使其重新生成。若你在 Beta 版本中修改了 rewards、<code>abilities_config.yml</code> 或 <code>source_config.yml</code> 之一，你就需要手动将改动加回去。</li><li>在控制台输入如下所有命令，使得技能合并，且玩家等级在两个待合并技能中取最大值。请确保执行命令时没有玩家在线。 <ul><li><code>skills storage mergeskills auraskills/endurance auraskills/agility</code></li><li><code>skills storage mergeskills auraskills/healing auraskills/alchemy</code></li><li><code>skills storage mergeskills auraskills/forging auraskills/enchanting</code></li></ul></li></ul>',18)),i(a),i(o)])}const g=s(d,[["render",u]]);export{b as __pageData,g as default};
