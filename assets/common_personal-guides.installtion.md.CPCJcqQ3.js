import{_ as t,C as i,c as e,o,an as p,G as a}from"./chunks/framework.FiaHILad.js";const u=JSON.parse('{"title":"安装教程","description":"","frontmatter":{"breadcrumbs":[{"title":"Continue Project","link":"/common"},{"title":"安装教程","link":"/common/personal-guides.installtion"}]},"headers":[],"relativePath":"common/personal-guides.installtion.md","filePath":"common/personal-guides.installtion.md"}'),h={name:"common/personal-guides.installtion.md"};function k(d,s,c,r,F,g){const l=i("NolebaseGitContributors"),n=i("NolebaseGitChangelog");return o(),e("div",null,[s[0]||(s[0]=p(`<h1 id="安装教程" tabindex="-1">安装教程 <a class="header-anchor" href="#安装教程" aria-label="Permalink to &quot;安装教程&quot;">​</a></h1><p>本章节将会指导你安装各种程序。</p><details class="details custom-block"><summary>fnm</summary><ol><li>按下 Win+R，输入 cmd，并回车。</li><li>输入 <code>winget install Schniz.fnm</code>，并回车。</li></ol><div class="info custom-block"><p class="custom-block-title">如果网络连接不佳...</p><p>尝试更换连接或使用魔法，直至安装完毕。</p></div><ol start="3"><li>按使用的界面选择对应的设置方式。</li></ol><ul><li>CMD <ol><li>打开界面，输入 <code>reg add &quot;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Command Processor&quot; /v AutoRun /t REG_SZ /d @^%USERPROFILE^%\\autorun.cmd&quot; &quot;2^&gt;NUL /f</code></li><li>在 <code>%USERPROFILE%</code> 对应目录下创建 <code>autorun.cmd</code> 文件，并填入如下内容：</li></ol></li></ul><div class="language-bash vp-adaptive-theme"><div data-code-block-title style="position:absolute;top:2px;left:8px;z-index:2;font-size:12px;font-weight:500;user-select:none;color:var(--vp-code-lang-color);"> autorun.cmd </div><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /F</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> will</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> launch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> new</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instance</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cmd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> so</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> we</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> guard</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> prevent</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> an</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> infnite</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loop</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> defined</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FNM_AUTORUN_GUARD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;FNM_AUTORUN_GUARD=AutorunGuard&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    FOR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tokens=*&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %%z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fnm env --use-on-cd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) DO CALL %%z</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><ul><li>Cmder <ol><li>在系统环境变量中加入 <code>CMDER_ROOT</code>，值为你安装 Cmder 的位置，且指向 <code>/bin</code> 文件夹。</li><li>在 <code>config/user_profile.cmd</code> 文件中，加入这些内容：</li></ol></li></ul><div class="language-bash vp-adaptive-theme"><div data-code-block-title style="position:absolute;top:2px;left:8px;z-index:2;font-size:12px;font-weight:500;user-select:none;color:var(--vp-code-lang-color);"> config/user_profile.cmd </div><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %CMDER_ROOT%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">onfig</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ser_profile.cmd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">call</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;%CMDER_ROOT%\\bin\\fnm_init.cmd&quot;</span></span></code></pre></div><ol start="3"><li>在 <code>bin/</code> 文件夹中，创建 <code>fnm_init.cmd</code> 并添加如下内容：</li></ol><div class="language-bash vp-adaptive-theme"><div data-code-block-title style="position:absolute;top:2px;left:8px;z-index:2;font-size:12px;font-weight:500;user-select:none;color:var(--vp-code-lang-color);"> fnm_init.cmd </div><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %CMDER_ROOT%</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\b</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">in</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nm_init.cmd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> off</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FOR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;tokens=*&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %%z</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> IN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;fnm env --use-on-cd&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) DO CALL %%z</span></span></code></pre></div><ul><li>PowerShell <ol><li>打开 PowerShell，输入 <code>if (-not (Test-Path $profile)) { New-Item $profile -Force }</code>。</li><li>之后再输入 <code>Invoke-Item $profile</code>。</li><li>在新创建的文件中输入如下命令：<code>fnm env --use-on-cd --shell powershell | Out-String | Invoke-Expression</code></li></ol></li></ul><div class="info custom-block"><p class="custom-block-title">如果提示无法打开或创建...</p><p>在 PowerShell 中输入这条命令： <code>Set-ExecutionPolicy RemoteSigned -Scope CurrentUser</code></p></div><ol start="4"><li>设置后，在对应界面内输入 <code>fnm use 版本号</code>，如果弹出 Node 版本号，则表示安装成功。</li><li>再输入 <code>corepack enable pnpm</code>，即可在环境中使用 <code>pnpm</code> 进行包管理。</li></ol><div class="info custom-block"><p class="custom-block-title">额外操作教学</p><p>在项目的目录下，创建一个 <code>.node-version</code> 文件，并在其中填入使用的版本，即可在启动项目时让 fnm 自动使用对应的 Node 版本。</p></div></details>`,3)),a(l),a(n)])}const E=t(h,[["render",k]]);export{u as __pageData,E as default};
