import{_ as i,C as r,c as l,o as p,am as c,G as a}from"./chunks/framework.SAy2jMg1.js";const f=JSON.parse('{"title":"API","description":"","frontmatter":{"breadcrumbs":[{"title":"Continue Project","link":"/SuperiorSkyblock2"},{"title":"API","link":"/SuperiorSkyblock2/overview.api"}]},"headers":[],"relativePath":"SuperiorSkyblock2/overview.api.md","filePath":"SuperiorSkyblock2/overview.api.md"}'),s={name:"SuperiorSkyblock2/overview.api.md"};function n(b,e,k,u,d,S){const o=r("NolebaseGitContributors"),t=r("NolebaseGitChangelog");return p(),l("div",null,[e[0]||(e[0]=c('<h1 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h1><p>SuperiorSkyBlock 提供了一个强大的 API，这样你可以为插件自行编写模块，修改插件行为，注册自定义命令！</p><p>你可以在<a href="https://bg-software.com/superiorskyblock/api/" target="_blank" rel="noreferrer">这里</a>找到插件 API 的 javadoc。</p><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h2><p>所有的 API 方法都可通过 <a href="https://github.com/BG-Software-LLC/SuperiorSkyblock2/blob/master/API/src/main/java/com/bgsoftware/superiorskyblock/api/SuperiorSkyblockAPI.java" target="_blank" rel="noreferrer">SuperiorSkyblockAPI</a> 类调用。</p><p>API 包含大量可以用于参数字段的对象，在这里我会简单介绍其中的一些：</p><ul><li><a href="https://github.com/OmerBenGera/SuperiorSkyblockAPI/blob/3cd75af980c19061aa0d6fb1120ea8560c26017a/src/main/java/com/bgsoftware/superiorskyblock/api/wrappers/SuperiorPlayer.java#L20" target="_blank" rel="noreferrer">SuperiorPlayer</a></li></ul><p>该对象用于将 Bukkit API 提供的玩家对象包装为本插件的玩家对象。它包含玩家数据、状态及模式（例如飞行）等内容。</p><p>你可以通过 <code>SuperiorSkyblockAPI.getPlayer(&lt;UUID&gt;)</code> 获取该对象。</p><ul><li><a href="https://github.com/BG-Software-LLC/SuperiorSkyblock2/blob/master/API/src/main/java/com/bgsoftware/superiorskyblock/api/island/Island.java" target="_blank" rel="noreferrer">Island</a></li></ul><p>该对象用于缓存服务器上的岛屿数据。成员、封禁玩家列表、翻倍卡、升级及其他数据都存储在该对象中。</p><p>你可以通过 <code>SuperiorPlayer#getIsland()</code> 方法获取玩家列表。若你需要获取指定位置上存在的岛屿，你可以使用 <code>SuperiorSkyblockAPI.getGrid().getIslandAt(&lt;Location&gt;)</code>。</p><ul><li><a href="https://github.com/BG-Software-LLC/SuperiorSkyblock2/blob/master/API/src/main/java/com/bgsoftware/superiorskyblock/api/handlers/GridManager.java" target="_blank" rel="noreferrer">GridManager</a></li></ul><p>网格管理器对象处理服务器上所有的岛屿。若你想与之交互，或从排行榜等与其有关的内容进行获取，则需使用该对象。</p><div class="info custom-block"><p class="custom-block-title">信息</p><p>不要使用岛屿对象拥有的方法（如 <code>deleteIsland</code> 方法），它只应被用于岛屿对象自身。</p></div>',15)),a(o),a(t)])}const _=i(s,[["render",n]]);export{f as __pageData,_ as default};
