import{_ as s,C as e,c as r,o,am as T,j as t,G as n,a as Q}from"./chunks/framework.SAy2jMg1.js";const L=JSON.parse('{"title":"岛屿翻倍卡","description":"","frontmatter":{"breadcrumbs":[{"title":"Continue Project","link":"/SuperiorSkyblock2"},{"title":"岛屿翻倍卡","link":"/SuperiorSkyblock2/overview.upgrades.island-multipliers"}]},"headers":[],"relativePath":"SuperiorSkyblock2/overview.upgrades.island-multipliers.md","filePath":"SuperiorSkyblock2/overview.upgrades.island-multipliers.md"}'),m={name:"SuperiorSkyblock2/overview.upgrades.island-multipliers.md"},d={class:"MathJax",jax:"SVG",style:{direction:"ltr",position:"relative"}},p={style:{overflow:"visible","min-height":"1px","min-width":"1px","vertical-align":"-0.452ex"},xmlns:"http://www.w3.org/2000/svg",width:"46.405ex",height:"2.149ex",role:"img",focusable:"false",viewBox:"0 -750 20510.9 950","aria-hidden":"true"};function h(f,a,g,u,c,x){const l=e("NolebaseGitContributors"),i=e("NolebaseGitChangelog");return o(),r("div",null,[a[8]||(a[8]=T('<h1 id="岛屿翻倍卡" tabindex="-1">岛屿翻倍卡 <a class="header-anchor" href="#岛屿翻倍卡" aria-label="Permalink to &quot;岛屿翻倍卡&quot;">​</a></h1><p>插件允许你通过升级系统修改不同的翻倍卡。</p><h2 id="作物生长" tabindex="-1">作物生长 <a class="header-anchor" href="#作物生长" aria-label="Permalink to &quot;作物生长&quot;">​</a></h2><p>作物生长翻倍卡会改变岛屿上的作物生长倍率。</p><p>为了解释作物生长相关机制，你首先要了解原版的相关内容。</p><p>因此，你必须先了解如下概念：</p><h3 id="区块" tabindex="-1">区块 <a class="header-anchor" href="#区块" aria-label="Permalink to &quot;区块&quot;">​</a></h3><p>区块（世界中 16x16 的区域）以选区的方式存储在世界文件夹中——每块 16x16x16 格方块。</p><h3 id="刻" tabindex="-1">刻 <a class="header-anchor" href="#刻" aria-label="Permalink to &quot;刻&quot;">​</a></h3><p>服务器通过刻进行运算，每刻至少 50 毫秒（即 20 刻为 1 秒）。</p><h3 id="参与刻计算的方块" tabindex="-1">参与刻计算的方块 <a class="header-anchor" href="#参与刻计算的方块" aria-label="Permalink to &quot;参与刻计算的方块&quot;">​</a></h3><p>“刻/滴答”、“参与刻计算的方块/被滴答的方块”等说法在本章节中均指作物类方块。</p><p>服务器运行的每一刻都会遍历可参与刻计算的载入区块（即玩家目光所能看见的所有区块），并尝试让区块内的方块进行可计算。每个区块中，服务器会遍历方块并随机地挑选一些方块进行刻计算。服务器如何决定这个数字？这就是游戏规则 <code>randomTickSpeed</code> 的作用！它会选择每个区块内的随机方块（间隔由 <code>randomTickSpeed</code> 决定），并检查它们是否可以进行下一步刻计算，若可以，则进行。在游戏内的表现就是作物方块生长至下一阶段。</p>',13)),t("p",null,[a[2]||(a[2]=Q("现在你已经理解了原版机制，让我们来看看插件如何处理翻倍卡。你大概能猜到，选择方块的过程相当随机，因此不可能获取作物生长的实际速率。但是，插件可以增加参与刻计算的方块。原版只让 ")),a[3]||(a[3]=t("code",null,"randomTickSpeed",-1)),a[4]||(a[4]=Q(" 数量的方块参与刻计算，而插件则将这个数量改为了 ")),t("mjx-container",d,[(o(),r("svg",p,a[0]||(a[0]=[T('<g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(451,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(980,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(1580,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2100,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(2585,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(3463,0)"><path data-c="1D447" d="M40 437Q21 437 21 445Q21 450 37 501T71 602L88 651Q93 669 101 677H569H659Q691 677 697 676T704 667Q704 661 687 553T668 444Q668 437 649 437Q640 437 637 437T631 442L629 445Q629 451 635 490T641 551Q641 586 628 604T573 629Q568 630 515 631Q469 631 457 630T439 622Q438 621 368 343T298 60Q298 48 386 46Q418 46 427 45T436 36Q436 31 433 22Q429 4 424 1L422 0Q419 0 415 0Q410 0 363 1T228 2Q99 2 64 0H49Q43 6 43 9T45 27Q49 40 55 46H83H94Q174 46 189 55Q190 56 191 56Q196 59 201 76T241 233Q258 301 269 344Q339 619 339 625Q339 630 310 630H279Q212 630 191 624Q146 614 121 583T67 467Q60 445 57 441T43 437H40Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4167,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4512,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(4945,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(5466,0)"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6111,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(6614,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(7080,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(7546,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z" style="stroke-width:3;"></path></g><g data-mml-node="mo" transform="translate(8288.2,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(9288.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(10288.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">物</text></g><g data-mml-node="mi" transform="translate(11288.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">生</text></g><g data-mml-node="mi" transform="translate(12288.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">长</text></g><g data-mml-node="mi" transform="translate(13288.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">倍</text></g><g data-mml-node="mi" transform="translate(14288.4,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">率</text></g><g data-mml-node="mo" transform="translate(15510.7,0)"><path data-c="D7" d="M630 29Q630 9 609 9Q604 9 587 25T493 118L389 222L284 117Q178 13 175 11Q171 9 168 9Q160 9 154 15T147 29Q147 36 161 51T255 146L359 250L255 354Q174 435 161 449T147 471Q147 480 153 485T168 490Q173 490 175 489Q178 487 284 383L389 278L493 382Q570 459 587 475T609 491Q630 491 630 471Q630 464 620 453T522 355L418 250L522 145Q606 61 618 48T630 29Z" style="stroke-width:3;"></path></g><g data-mml-node="mi" transform="translate(16510.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">作</text></g><g data-mml-node="mi" transform="translate(17510.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">物</text></g><g data-mml-node="mi" transform="translate(18510.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">间</text></g><g data-mml-node="mi" transform="translate(19510.9,0)"><text data-variant="normal" transform="scale(1,-1)" font-size="884px" font-family="serif">隔</text></g></g></g>',1)]))),a[1]||(a[1]=t("mjx-assistive-mml",{unselectable:"on",display:"inline",style:{top:"0px",left:"0px",clip:"rect(1px, 1px, 1px, 1px)","-webkit-touch-callout":"none","-webkit-user-select":"none","-khtml-user-select":"none","-moz-user-select":"none","-ms-user-select":"none","user-select":"none",position:"absolute",padding:"1px 0px 0px 0px",border:"0px",display:"block",width:"auto",overflow:"hidden"}},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("mi",null,"r"),t("mi",null,"a"),t("mi",null,"n"),t("mi",null,"d"),t("mi",null,"o"),t("mi",null,"m"),t("mi",null,"T"),t("mi",null,"i"),t("mi",null,"c"),t("mi",null,"k"),t("mi",null,"S"),t("mi",null,"p"),t("mi",null,"e"),t("mi",null,"e"),t("mi",null,"d"),t("mo",null,"×"),t("mi",{mathvariant:"normal"},"作"),t("mi",{mathvariant:"normal"},"物"),t("mi",{mathvariant:"normal"},"生"),t("mi",{mathvariant:"normal"},"长"),t("mi",{mathvariant:"normal"},"倍"),t("mi",{mathvariant:"normal"},"率"),t("mo",null,"×"),t("mi",{mathvariant:"normal"},"作"),t("mi",{mathvariant:"normal"},"物"),t("mi",{mathvariant:"normal"},"间"),t("mi",{mathvariant:"normal"},"隔")])],-1))]),a[5]||(a[5]=Q("（乘以 ")),a[6]||(a[6]=t("code",null,"作物间隔",-1)),a[7]||(a[7]=Q(" 的值是因为插件不会在每刻将所有方块纳入计算——但这可以配置）。"))]),a[9]||(a[9]=T('<h2 id="刷怪速率" tabindex="-1">刷怪速率 <a class="header-anchor" href="#刷怪速率" aria-label="Permalink to &quot;刷怪速率&quot;">​</a></h2><p>刷怪速率翻倍卡会改变下一波怪物生成的时间。在本章节中，<code>波次</code> 指刷怪笼生成一波实体。这个操作可以在一或多个刻内完成，取决于实际情况。</p><p>在生成一波怪物之后，插件会等待几刻（实际为 5 刻），并缩短下一波刷怪笼的生成时间。这个延迟可以确保当前波次的怪物生成完毕，并使得修改后的延迟能被游戏正常应用。因为波次可以持续超过 1 刻，插件必须在修改延迟前确保波次完成生成怪物的任务。</p><p>插件通过获取当前延迟并除以岛屿刷怪翻倍卡的值达到修改延迟的目的。插件会在进行操作前确保刷怪笼的速率大于 1。除数（即便为偏小值）也会显著降低刷怪笼的延迟，并因此建议使用偏小的值（若可以建议使用小数）——生成过多实体会拖慢服务器。</p><h2 id="实体掉落" tabindex="-1">实体掉落 <a class="header-anchor" href="#实体掉落" aria-label="Permalink to &quot;实体掉落&quot;">​</a></h2><p>实体掉落翻倍卡会修改岛屿上实体的掉落产出数量。</p><div class="info custom-block"><p class="custom-block-title">信息</p><p>翻倍卡只修改掉落物的数量，不会增加其他物品掉落的几率。</p></div><p>在实体死亡后，插件会遍历其掉落的所有物品，并将其乘以掉落翻倍卡的值。若计算后的数量超出了物品的最大堆叠数，插件会生成一叠新的物品。</p><p>插件会确保实体不额外掉落装备（盔甲、手持物品、箱子的内容等）来防止刷物品漏洞的出现。</p>',9)),n(l),n(i)])}const v=s(m,[["render",h]]);export{L as __pageData,v as default};
