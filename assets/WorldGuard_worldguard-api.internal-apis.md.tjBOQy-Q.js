import{_ as t,C as a,c as d,o as i,an as n,G as o}from"./chunks/framework.CUFjuIqA.js";const b=JSON.parse('{"title":"内部 API","description":"","frontmatter":{"breadcrumbs":[{"title":"Continue Project","link":"/WorldGuard"},{"title":"内部 API","link":"/WorldGuard/worldguard-api.internal-apis"}]},"headers":[],"relativePath":"WorldGuard/worldguard-api.internal-apis.md","filePath":"WorldGuard/worldguard-api.internal-apis.md"}'),c={name:"WorldGuard/worldguard-api.internal-apis.md"};function s(u,e,p,_,m,g){const r=a("NolebaseGitContributors"),l=a("NolebaseGitChangelog");return i(),d("div",null,[e[0]||(e[0]=n('<h1 id="内部-api" tabindex="-1">内部 API <a class="header-anchor" href="#内部-api" aria-label="Permalink to &quot;内部 API&quot;">​</a></h1><p>一些 WorldGuard 的功能不会被考虑为公开 API，且可能在没有预警的情况下在将来弃用。这部分的代码使用不会被考虑为正确，且不会受到任何形式的支持。</p><p>内部 API 的精确定义是，任何 Java 规范中不能获取的任意内容，包括下面几种方法：</p><ul><li>平台集成中的任意内容（例如，<code>worldguard-bukkit</code>，与 <code>-core</code> 对应）和除 <code>WorldGuardPlugin</code> 中 <code>wrapPlayer</code> 外的方法；</li><li>下列包中的任意内容： <ul><li><code>com.sk89q.worldguard.internal</code></li><li><code>com.sk89q.worldguard.commands</code></li><li><code>com.sk89q.worldguard.util</code></li></ul></li><li>任意被标记为“内部”的内容（<a href="https://enginehub.org/documentation" target="_blank" rel="noreferrer">Javadoc</a> 中标注）</li></ul>',4)),o(r),o(l)])}const h=t(c,[["render",s]]);export{b as __pageData,h as default};
