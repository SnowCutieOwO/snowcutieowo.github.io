import{_ as r,C as t,c as d,o as i,am as p,G as o}from"./chunks/framework.SAy2jMg1.js";const u=JSON.parse('{"title":"区段","description":"","frontmatter":{"breadcrumbs":[{"title":"Continue Project","link":"/WorldEdit"},{"title":"区段","link":"/WorldEdit/developer-api.api-concepts.extents"}]},"headers":[],"relativePath":"WorldEdit/developer-api.api-concepts.extents.md","filePath":"WorldEdit/developer-api.api-concepts.extents.md"}'),s={name:"WorldEdit/developer-api.api-concepts.extents.md"};function c(l,e,_,m,E,x){const a=t("NolebaseGitContributors"),n=t("NolebaseGitChangelog");return i(),d("div",null,[e[0]||(e[0]=p('<h1 id="区段" tabindex="-1">区段 <a class="header-anchor" href="#区段" aria-label="Permalink to &quot;区段&quot;">​</a></h1><p>区段是 WorldEdit 进行方块编辑的核心部分。区段被大致分为三类：输入、输出和二者均占的部分。尽管区段参与提供和接收方块和生物群系信息这一过程，但它们并不与任何世界/维度有关。</p><p>输入区段负责提供指定位置的方块和生物群系信息。它们不会提供设置方块的方法。</p><p>输出区段负责接收指定位置的方块和生物群系信息。它们不会提供获取方块的方法。</p><p>大部分或所有的 WorldEdit 区段都集成了 <code>*Extent</code> 实例，一般为 <code>Extent</code> 实例。这些实例也提供了最小和最大点，以及实体操作方法。</p><p>一些区段的实例即为世界和剪贴板。许多在 WorldEdit 中的方块放置——例如快速和重排模式——都是通过集成 <code>AbstractDelegateExtent</code> 并与 <code>setBlock</code> 对接完成的。</p>',6)),o(a),o(n)])}const C=r(s,[["render",c]]);export{u as __pageData,C as default};
